// <auto-generated />
using System;
using Football_Insight.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Football_Insight.Infrastructure.Migrations
{
    [DbContext(typeof(FootballInsightDbContext))]
    [Migration("20240416160815_FullMigration")]
    partial class FullMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Optional. The user's city. This is not required at registration and can be filled in later.");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Optional. The user's country. This is not required at registration and can be filled in later.");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("FavoritePlayerId")
                        .HasColumnType("int")
                        .HasComment("Optional. ID of the user's favorite player. This is not required at registration and can be filled in later.");

                    b.Property<int?>("FavoriteTeamId")
                        .HasColumnType("int")
                        .HasComment("Optional. ID of the user's favorite team. This is not required at registration and can be filled in later.");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Optional. The user's first name. This is not required at registration and can be filled in later.");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Optional. The user's last name. This is not required at registration and can be filled in later.");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Optional. Path to the user's photo. This can be updated to enhance the user's profile.");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasComment("Represents the user profile within the application, extending the IdentityUser with custom properties for a personalized experience.");

                    b.HasData(
                        new
                        {
                            Id = "5960fd2f-7d29-4b42-8f4d-b0a8979fc967",
                            AccessFailedCount = 0,
                            City = "",
                            ConcurrencyStamp = "1e6924a7-7b0d-4c13-bc30-facb3be34aa3",
                            Country = "",
                            Email = "user@fi.com",
                            EmailConfirmed = true,
                            FirstName = "",
                            LastName = "",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@FI.COM",
                            NormalizedUserName = "USER@FI.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENJXpWT/ruiW3gnR4AnLEVddOlahR3/cdnQ89RfFmstcttxGsdE/yC3y8HFlIRyTwg==",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "",
                            SecurityStamp = "5df85cba-a3ba-4fcc-a09f-585381136ae6",
                            TwoFactorEnabled = false,
                            UserName = "user@fi.com"
                        },
                        new
                        {
                            Id = "a78b1097-2433-4333-8168-048827f0eab7",
                            AccessFailedCount = 0,
                            City = "",
                            ConcurrencyStamp = "2d2fc009-0ab5-4dd4-a236-5e23289f4be4",
                            Country = "",
                            Email = "admin@fi.com",
                            EmailConfirmed = true,
                            FirstName = "",
                            LastName = "",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@FI.COM",
                            NormalizedUserName = "ADMIN@FI.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFzPmoGqFVcc7nn+GhhIFVGBPpS4wMXPfLqBoUTXzP69naVKSQAki8ga68isBTfHpQ==",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "",
                            SecurityStamp = "1c5c3dd3-814d-4f5d-8530-40efc9879430",
                            TwoFactorEnabled = false,
                            UserName = "admin@fi.com"
                        });
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Favorite", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasComment("The ID of the user who has marked a match as a favorite.");

                    b.Property<int>("MatchId")
                        .HasColumnType("int")
                        .HasComment("The ID of the match that has been marked as favorite by the user.");

                    b.HasKey("UserId", "MatchId");

                    b.HasIndex("MatchId");

                    b.ToTable("Favorite");

                    b.HasComment("Represent a relationship between a user and their favorite matches.");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Unique identifier for the goal.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GoalAssistantId")
                        .HasColumnType("int")
                        .HasComment("Optional identifier of the player who assisted the goal. Can be null if there was no assist.");

                    b.Property<int>("GoalMinute")
                        .HasColumnType("int")
                        .HasComment("The minute of the match in which the goal was scored.");

                    b.Property<int>("GoalScorerId")
                        .HasColumnType("int")
                        .HasComment("Identifier of the player who scored the goal. Foreign key that references the Player entity as the goal scorer.");

                    b.Property<int>("MatchId")
                        .HasColumnType("int")
                        .HasComment("Identifier of the match in which the goal was scored. Foreign key that references the Match entity.");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasComment("Identifier of the team that scored the goal. Foreign key that references the Team entity.");

                    b.HasKey("Id");

                    b.HasIndex("GoalAssistantId");

                    b.HasIndex("GoalScorerId");

                    b.HasIndex("MatchId");

                    b.HasIndex("TeamId");

                    b.ToTable("Goals");

                    b.HasComment("Represent information about goals scored in matches.");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GoalAssistantId = 3,
                            GoalMinute = 35,
                            GoalScorerId = 4,
                            MatchId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            GoalAssistantId = 4,
                            GoalMinute = 78,
                            GoalScorerId = 3,
                            MatchId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            GoalAssistantId = 7,
                            GoalMinute = 52,
                            GoalScorerId = 8,
                            MatchId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            GoalAssistantId = 3,
                            GoalMinute = 15,
                            GoalScorerId = 4,
                            MatchId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            GoalAssistantId = 2,
                            GoalMinute = 47,
                            GoalScorerId = 3,
                            MatchId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            GoalAssistantId = 4,
                            GoalMinute = 78,
                            GoalScorerId = 2,
                            MatchId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 7,
                            GoalAssistantId = 11,
                            GoalMinute = 29,
                            GoalScorerId = 12,
                            MatchId = 2,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 8,
                            GoalAssistantId = 10,
                            GoalMinute = 55,
                            GoalScorerId = 11,
                            MatchId = 2,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 9,
                            GoalAssistantId = 12,
                            GoalMinute = 85,
                            GoalScorerId = 10,
                            MatchId = 2,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 10,
                            GoalAssistantId = 3,
                            GoalMinute = 22,
                            GoalScorerId = 4,
                            MatchId = 3,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 11,
                            GoalMinute = 68,
                            GoalScorerId = 3,
                            MatchId = 3,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 12,
                            GoalAssistantId = 15,
                            GoalMinute = 51,
                            GoalScorerId = 16,
                            MatchId = 3,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 13,
                            GoalAssistantId = 7,
                            GoalMinute = 36,
                            GoalScorerId = 8,
                            MatchId = 4,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 14,
                            GoalAssistantId = 11,
                            GoalMinute = 78,
                            GoalScorerId = 12,
                            MatchId = 4,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 15,
                            GoalAssistantId = 7,
                            GoalMinute = 12,
                            GoalScorerId = 8,
                            MatchId = 5,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 16,
                            GoalAssistantId = 8,
                            GoalMinute = 45,
                            GoalScorerId = 6,
                            MatchId = 5,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 17,
                            GoalMinute = 73,
                            GoalScorerId = 7,
                            MatchId = 5,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 18,
                            GoalAssistantId = 7,
                            GoalMinute = 24,
                            GoalScorerId = 8,
                            MatchId = 6,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 19,
                            GoalAssistantId = 8,
                            GoalMinute = 54,
                            GoalScorerId = 6,
                            MatchId = 6,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 20,
                            GoalAssistantId = 23,
                            GoalMinute = 38,
                            GoalScorerId = 24,
                            MatchId = 6,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 21,
                            GoalAssistantId = 23,
                            GoalMinute = 76,
                            GoalScorerId = 22,
                            MatchId = 6,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 22,
                            GoalAssistantId = 11,
                            GoalMinute = 12,
                            GoalScorerId = 12,
                            MatchId = 7,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 23,
                            GoalAssistantId = 10,
                            GoalMinute = 28,
                            GoalScorerId = 11,
                            MatchId = 7,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 24,
                            GoalAssistantId = 12,
                            GoalMinute = 53,
                            GoalScorerId = 10,
                            MatchId = 7,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 25,
                            GoalMinute = 79,
                            GoalScorerId = 9,
                            MatchId = 7,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 26,
                            GoalAssistantId = 23,
                            GoalMinute = 65,
                            GoalScorerId = 24,
                            MatchId = 7,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 27,
                            GoalAssistantId = 11,
                            GoalMinute = 18,
                            GoalScorerId = 12,
                            MatchId = 9,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 28,
                            GoalAssistantId = 10,
                            GoalMinute = 57,
                            GoalScorerId = 11,
                            MatchId = 9,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 29,
                            GoalAssistantId = 31,
                            GoalMinute = 73,
                            GoalScorerId = 32,
                            MatchId = 9,
                            TeamId = 8
                        },
                        new
                        {
                            Id = 30,
                            GoalAssistantId = 34,
                            GoalMinute = 11,
                            GoalScorerId = 33,
                            MatchId = 10,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 31,
                            GoalAssistantId = 35,
                            GoalMinute = 27,
                            GoalScorerId = 34,
                            MatchId = 10,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 32,
                            GoalMinute = 49,
                            GoalScorerId = 33,
                            MatchId = 10,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 33,
                            GoalAssistantId = 33,
                            GoalMinute = 68,
                            GoalScorerId = 34,
                            MatchId = 10,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 34,
                            GoalAssistantId = 15,
                            GoalMinute = 78,
                            GoalScorerId = 16,
                            MatchId = 10,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 35,
                            GoalAssistantId = 39,
                            GoalMinute = 32,
                            GoalScorerId = 40,
                            MatchId = 11,
                            TeamId = 10
                        },
                        new
                        {
                            Id = 36,
                            GoalAssistantId = 40,
                            GoalMinute = 71,
                            GoalScorerId = 38,
                            MatchId = 11,
                            TeamId = 10
                        },
                        new
                        {
                            Id = 37,
                            GoalAssistantId = 15,
                            GoalMinute = 11,
                            GoalScorerId = 16,
                            MatchId = 12,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 38,
                            GoalAssistantId = 16,
                            GoalMinute = 34,
                            GoalScorerId = 14,
                            MatchId = 12,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 39,
                            GoalAssistantId = 14,
                            GoalMinute = 78,
                            GoalScorerId = 15,
                            MatchId = 12,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 40,
                            GoalAssistantId = 19,
                            GoalMinute = 22,
                            GoalScorerId = 20,
                            MatchId = 12,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 41,
                            GoalAssistantId = 20,
                            GoalMinute = 45,
                            GoalScorerId = 18,
                            MatchId = 12,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 42,
                            GoalMinute = 60,
                            GoalScorerId = 20,
                            MatchId = 12,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 43,
                            GoalMinute = 85,
                            GoalScorerId = 17,
                            MatchId = 12,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 44,
                            GoalAssistantId = 19,
                            GoalMinute = 18,
                            GoalScorerId = 20,
                            MatchId = 13,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 45,
                            GoalAssistantId = 20,
                            GoalMinute = 52,
                            GoalScorerId = 18,
                            MatchId = 13,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 46,
                            GoalAssistantId = 23,
                            GoalMinute = 37,
                            GoalScorerId = 24,
                            MatchId = 13,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 47,
                            GoalAssistantId = 24,
                            GoalMinute = 76,
                            GoalScorerId = 22,
                            MatchId = 13,
                            TeamId = 6
                        });
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("The unique identifier for the league.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasComment("The name of the league.");

                    b.HasKey("Id");

                    b.ToTable("Leagues");

                    b.HasComment("Represent information about league.");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Super League"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mystic League"
                        });
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("The unique identifier for the match.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AwayScore")
                        .HasColumnType("int")
                        .HasComment("The score of the away team at the end of the match.");

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int")
                        .HasComment("Foreign key representing the away team. References the Team entity.");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2")
                        .HasComment("The date and time when the match is scheduled to take place.");

                    b.Property<int>("HomeScore")
                        .HasColumnType("int")
                        .HasComment("The score of the home team at the end of the match.");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int")
                        .HasComment("Foreign key representing the home team. References the Team entity.");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int")
                        .HasComment("Foreign key for the league to which this match belongs. References the League entity.");

                    b.Property<int>("Minutes")
                        .HasColumnType("int")
                        .HasComment("The total minutes played in the match.");

                    b.Property<int>("StadiumId")
                        .HasColumnType("int")
                        .HasComment("Foreign key for the stadium where the match is held. References the Stadium entity.");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("The current status of the match.");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("LeagueId");

                    b.HasIndex("StadiumId");

                    b.ToTable("Matches");

                    b.HasComment("Represent information about the match.");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayScore = 1,
                            AwayTeamId = 2,
                            DateAndTime = new DateTime(2023, 11, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 2,
                            HomeTeamId = 1,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 1,
                            Status = 4
                        },
                        new
                        {
                            Id = 2,
                            AwayScore = 3,
                            AwayTeamId = 3,
                            DateAndTime = new DateTime(2023, 11, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 3,
                            HomeTeamId = 1,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 1,
                            Status = 4
                        },
                        new
                        {
                            Id = 3,
                            AwayScore = 2,
                            AwayTeamId = 1,
                            DateAndTime = new DateTime(2023, 11, 20, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 1,
                            HomeTeamId = 4,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 4,
                            Status = 4
                        },
                        new
                        {
                            Id = 4,
                            AwayScore = 1,
                            AwayTeamId = 3,
                            DateAndTime = new DateTime(2023, 11, 5, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 1,
                            HomeTeamId = 2,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 2,
                            Status = 4
                        },
                        new
                        {
                            Id = 5,
                            AwayScore = 3,
                            AwayTeamId = 2,
                            DateAndTime = new DateTime(2023, 11, 15, 19, 45, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 5,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 5,
                            Status = 4
                        },
                        new
                        {
                            Id = 6,
                            AwayScore = 2,
                            AwayTeamId = 6,
                            DateAndTime = new DateTime(2023, 11, 25, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 2,
                            HomeTeamId = 2,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 2,
                            Status = 4
                        },
                        new
                        {
                            Id = 7,
                            AwayScore = 1,
                            AwayTeamId = 6,
                            DateAndTime = new DateTime(2023, 11, 5, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 4,
                            HomeTeamId = 3,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 3,
                            Status = 4
                        },
                        new
                        {
                            Id = 8,
                            AwayScore = 0,
                            AwayTeamId = 3,
                            DateAndTime = new DateTime(2023, 11, 30, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 7,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 7,
                            Status = 4
                        },
                        new
                        {
                            Id = 9,
                            AwayScore = 2,
                            AwayTeamId = 3,
                            DateAndTime = new DateTime(2023, 12, 10, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 1,
                            HomeTeamId = 8,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 8,
                            Status = 4
                        },
                        new
                        {
                            Id = 10,
                            AwayScore = 1,
                            AwayTeamId = 4,
                            DateAndTime = new DateTime(2023, 12, 15, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 4,
                            HomeTeamId = 9,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 9,
                            Status = 4
                        },
                        new
                        {
                            Id = 11,
                            AwayScore = 0,
                            AwayTeamId = 4,
                            DateAndTime = new DateTime(2023, 12, 20, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 2,
                            HomeTeamId = 10,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 10,
                            Status = 4
                        },
                        new
                        {
                            Id = 12,
                            AwayScore = 4,
                            AwayTeamId = 5,
                            DateAndTime = new DateTime(2023, 12, 25, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 3,
                            HomeTeamId = 4,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 4,
                            Status = 4
                        },
                        new
                        {
                            Id = 13,
                            AwayScore = 2,
                            AwayTeamId = 6,
                            DateAndTime = new DateTime(2024, 1, 5, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 2,
                            HomeTeamId = 5,
                            LeagueId = 1,
                            Minutes = 90,
                            StadiumId = 5,
                            Status = 4
                        },
                        new
                        {
                            Id = 14,
                            AwayScore = 0,
                            AwayTeamId = 5,
                            DateAndTime = new DateTime(2024, 4, 27, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 1,
                            LeagueId = 1,
                            Minutes = 0,
                            StadiumId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            AwayScore = 0,
                            AwayTeamId = 7,
                            DateAndTime = new DateTime(2024, 4, 25, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 3,
                            LeagueId = 1,
                            Minutes = 0,
                            StadiumId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            AwayScore = 0,
                            AwayTeamId = 6,
                            DateAndTime = new DateTime(2024, 4, 30, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 4,
                            LeagueId = 1,
                            Minutes = 0,
                            StadiumId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            AwayScore = 0,
                            AwayTeamId = 10,
                            DateAndTime = new DateTime(2024, 4, 25, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 8,
                            LeagueId = 1,
                            Minutes = 0,
                            StadiumId = 8,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            AwayScore = 0,
                            AwayTeamId = 8,
                            DateAndTime = new DateTime(2024, 5, 2, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 2,
                            LeagueId = 1,
                            Minutes = 0,
                            StadiumId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            AwayScore = 0,
                            AwayTeamId = 3,
                            DateAndTime = new DateTime(2024, 5, 10, 19, 45, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 5,
                            LeagueId = 1,
                            Minutes = 0,
                            StadiumId = 5,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            AwayScore = 0,
                            AwayTeamId = 1,
                            DateAndTime = new DateTime(2024, 5, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 9,
                            LeagueId = 1,
                            Minutes = 0,
                            StadiumId = 9,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            AwayScore = 0,
                            AwayTeamId = 4,
                            DateAndTime = new DateTime(2024, 5, 23, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            HomeScore = 0,
                            HomeTeamId = 7,
                            LeagueId = 1,
                            Minutes = 0,
                            StadiumId = 7,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("The unique identifier for the player.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasComment("The date of birth of the player.");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The player's first name.");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The player's last name.");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasComment("The position of the player on the field.");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasComment("The transfer or market price of the player.");

                    b.Property<decimal>("Salary")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasComment("The salary of the player.");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasComment("Foreign key to the Team entity. Represents the team to which the player currently belongs.");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasComment("Represent information about the player.");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1990, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Andre",
                            LastName = "Onana",
                            Position = 0,
                            Price = 15000000m,
                            Salary = 250000m,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1993, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Harry",
                            LastName = "Maguire",
                            Position = 1,
                            Price = 35000000m,
                            Salary = 4500000m,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1994, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bruno",
                            LastName = "Fernandes",
                            Position = 2,
                            Price = 75000000m,
                            Salary = 6000000m,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1997, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marcus",
                            LastName = "Rashford",
                            Position = 3,
                            Price = 55000000m,
                            Salary = 5000000m,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1992, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Thibaut",
                            LastName = "Courtois",
                            Position = 0,
                            Price = 50000000m,
                            Salary = 5000000m,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1986, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "David",
                            LastName = "Alaba",
                            Position = 1,
                            Price = 35000000m,
                            Salary = 4500000m,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(1985, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Luka",
                            LastName = "Modric",
                            Position = 2,
                            Price = 30000000m,
                            Salary = 8000000m,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateTime(1987, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vinicius",
                            LastName = "Junior",
                            Position = 3,
                            Price = 80000000m,
                            Salary = 5000000m,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateTime(1986, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Manuel",
                            LastName = "Neuer",
                            Position = 0,
                            Price = 20000000m,
                            Salary = 7000000m,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateTime(1996, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lucas",
                            LastName = "Hernandez",
                            Position = 1,
                            Price = 60000000m,
                            Salary = 4500000m,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = new DateTime(1995, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Joshua",
                            LastName = "Kimmich",
                            Position = 2,
                            Price = 85000000m,
                            Salary = 8000000m,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 12,
                            DateOfBirth = new DateTime(1989, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Thomas",
                            LastName = "Muller",
                            Position = 3,
                            Price = 40000000m,
                            Salary = 7000000m,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 13,
                            DateOfBirth = new DateTime(1995, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mike",
                            LastName = "Maignan",
                            Position = 0,
                            Price = 25000000m,
                            Salary = 3000000m,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 14,
                            DateOfBirth = new DateTime(1997, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Fikayo",
                            LastName = "Tomori",
                            Position = 1,
                            Price = 28000000m,
                            Salary = 3000000m,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 15,
                            DateOfBirth = new DateTime(2000, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Christian",
                            LastName = "Pulisic",
                            Position = 2,
                            Price = 50000000m,
                            Salary = 5000000m,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 16,
                            DateOfBirth = new DateTime(1986, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivier",
                            LastName = "Giroud",
                            Position = 3,
                            Price = 20000000m,
                            Salary = 4000000m,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 17,
                            DateOfBirth = new DateTime(1999, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gianluigi",
                            LastName = "Donnarumma",
                            Position = 0,
                            Price = 10000000m,
                            Salary = 4503000m,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 18,
                            DateOfBirth = new DateTime(1994, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marquinhos",
                            LastName = "Correa",
                            Position = 1,
                            Price = 20000000m,
                            Salary = 4000000m,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 19,
                            DateOfBirth = new DateTime(1992, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marco",
                            LastName = "Verratti",
                            Position = 2,
                            Price = 55000000m,
                            Salary = 6000000m,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 20,
                            DateOfBirth = new DateTime(1998, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kylian",
                            LastName = "Mbappe",
                            Position = 3,
                            Price = 180000000m,
                            Salary = 18000000m,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 21,
                            DateOfBirth = new DateTime(1992, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert",
                            LastName = "Sanchez",
                            Position = 0,
                            Price = 12000000m,
                            Salary = 2500000m,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 22,
                            DateOfBirth = new DateTime(1984, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Thiago",
                            LastName = "Silva",
                            Position = 1,
                            Price = 5000000m,
                            Salary = 5000000m,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 23,
                            DateOfBirth = new DateTime(1991, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Cole",
                            LastName = "Palmer",
                            Position = 2,
                            Price = 8000000m,
                            Salary = 1000000m,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 24,
                            DateOfBirth = new DateTime(1999, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nicolas",
                            LastName = "Jackson",
                            Position = 3,
                            Price = 7000000m,
                            Salary = 900000m,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 25,
                            DateOfBirth = new DateTime(1992, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marc-Andre",
                            LastName = "ter Stegen",
                            Position = 0,
                            Price = 45000000m,
                            Salary = 7500000m,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 26,
                            DateOfBirth = new DateTime(1987, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Eric",
                            LastName = "Garcia",
                            Position = 1,
                            Price = 25000000m,
                            Salary = 3000000m,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 27,
                            DateOfBirth = new DateTime(1997, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Frenkie",
                            LastName = "de Jong",
                            Position = 2,
                            Price = 80000000m,
                            Salary = 6000000m,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 28,
                            DateOfBirth = new DateTime(2002, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert",
                            LastName = "Lewandowski",
                            Position = 3,
                            Price = 90000000m,
                            Salary = 10000000m,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 29,
                            DateOfBirth = new DateTime(1997, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gregor",
                            LastName = "Kobel",
                            Position = 0,
                            Price = 15000000m,
                            Salary = 2000000m,
                            TeamId = 8
                        },
                        new
                        {
                            Id = 30,
                            DateOfBirth = new DateTime(1988, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mats",
                            LastName = "Hummels",
                            Position = 1,
                            Price = 10000000m,
                            Salary = 5000000m,
                            TeamId = 8
                        },
                        new
                        {
                            Id = 31,
                            DateOfBirth = new DateTime(2003, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marco",
                            LastName = "Reus",
                            Position = 2,
                            Price = 30000000m,
                            Salary = 7000000m,
                            TeamId = 8
                        },
                        new
                        {
                            Id = 32,
                            DateOfBirth = new DateTime(1999, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Donyell",
                            LastName = "Malen",
                            Position = 3,
                            Price = 20000000m,
                            Salary = 1500000m,
                            TeamId = 8
                        },
                        new
                        {
                            Id = 33,
                            DateOfBirth = new DateTime(2001, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bukayo",
                            LastName = "Saka",
                            Position = 3,
                            Price = 35000000m,
                            Salary = 3000000m,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 34,
                            DateOfBirth = new DateTime(1998, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Martin",
                            LastName = "Odegaard",
                            Position = 2,
                            Price = 45000000m,
                            Salary = 4000000m,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 35,
                            DateOfBirth = new DateTime(1997, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gabriel",
                            LastName = "Magalhaes",
                            Position = 1,
                            Price = 25000000m,
                            Salary = 2000000m,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 36,
                            DateOfBirth = new DateTime(1998, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Aaron",
                            LastName = "Ramsdale",
                            Position = 0,
                            Price = 18000000m,
                            Salary = 3000000m,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 37,
                            DateOfBirth = new DateTime(1992, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alisson",
                            LastName = "Becker",
                            Position = 0,
                            Price = 60000000m,
                            Salary = 8000000m,
                            TeamId = 10
                        },
                        new
                        {
                            Id = 38,
                            DateOfBirth = new DateTime(1991, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Virgil",
                            LastName = "van Dijk",
                            Position = 1,
                            Price = 75000000m,
                            Salary = 8500000m,
                            TeamId = 10
                        },
                        new
                        {
                            Id = 39,
                            DateOfBirth = new DateTime(1991, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Thiago",
                            LastName = "Alcântara",
                            Position = 2,
                            Price = 40000000m,
                            Salary = 7000000m,
                            TeamId = 10
                        },
                        new
                        {
                            Id = 40,
                            DateOfBirth = new DateTime(1992, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mohamed",
                            LastName = "Salah",
                            Position = 3,
                            Price = 120000000m,
                            Salary = 10000000m,
                            TeamId = 10
                        });
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Stadium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("The unique identifier for the stadium.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)")
                        .HasComment("The physical address of the stadium.");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasComment("The seating capacity of the stadium.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The name of the stadium.");

                    b.Property<int>("YearBuilt")
                        .HasColumnType("int")
                        .HasComment("The year when the stadium was built.");

                    b.HasKey("Id");

                    b.ToTable("Stadiums");

                    b.HasComment("Represent information about the stadium.");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Sir Matt Busby Way, Manchester",
                            Capacity = 74879,
                            Name = "Old Trafford",
                            YearBuilt = 1910
                        },
                        new
                        {
                            Id = 2,
                            Address = "Av. de Concha Espina, 1, Madrid",
                            Capacity = 81044,
                            Name = "Santiago Bernabéu",
                            YearBuilt = 1947
                        },
                        new
                        {
                            Id = 3,
                            Address = "Werner-Heisenberg-Allee 25, Munich",
                            Capacity = 75000,
                            Name = "Allianz Arena",
                            YearBuilt = 2005
                        },
                        new
                        {
                            Id = 4,
                            Address = "Piazzale Angelo Moratti, Milan",
                            Capacity = 80018,
                            Name = "San Siro",
                            YearBuilt = 1926
                        },
                        new
                        {
                            Id = 5,
                            Address = "Rue Henri Delaunay, Saint-Denis, Paris",
                            Capacity = 81338,
                            Name = "Stade de France",
                            YearBuilt = 1998
                        },
                        new
                        {
                            Id = 6,
                            Address = "Fulham Road, Fulham, London SW6 1HS",
                            Capacity = 40343,
                            Name = "Stamford Bridge",
                            YearBuilt = 1935
                        },
                        new
                        {
                            Id = 7,
                            Address = "C. d'Aristides Maillol, 12, Barcelona",
                            Capacity = 99354,
                            Name = "Camp Nou",
                            YearBuilt = 1957
                        },
                        new
                        {
                            Id = 8,
                            Address = "Strobelallee 50, 44139 Dortmund, North Rhine-Westphalia, Germany",
                            Capacity = 81365,
                            Name = "Signal Iduna Park",
                            YearBuilt = 1974
                        },
                        new
                        {
                            Id = 9,
                            Address = "Highbury House, 75 Drayton Park, London",
                            Capacity = 60704,
                            Name = "Emirates Stadium",
                            YearBuilt = 2006
                        },
                        new
                        {
                            Id = 10,
                            Address = "Anfield Rd, Liverpool",
                            Capacity = 53394,
                            Name = "Anfield",
                            YearBuilt = 1884
                        });
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("The unique identifier for the team.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Coach")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("The name of the team current coach.");

                    b.Property<int>("Founded")
                        .HasColumnType("int")
                        .HasComment("The year the team was founded.");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int")
                        .HasComment("Foreign key to the League entity. Indicates the league in which the team competes.");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("URL to the team logo image.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The name of the team.");

                    b.Property<int>("StadiumId")
                        .HasColumnType("int")
                        .HasComment("Foreign key to the Stadium entity. Represents the home stadium of the team.");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("StadiumId");

                    b.ToTable("Teams");

                    b.HasComment("Represent information about the team.");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coach = "Ten Hag",
                            Founded = 1878,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/nwSRlyWg-h2pPXz3k.png",
                            Name = "Manchester United",
                            StadiumId = 1
                        },
                        new
                        {
                            Id = 2,
                            Coach = "Anceloti",
                            Founded = 1902,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/A7kHoxZA-fcDVLdrL.png",
                            Name = "Real Madrid",
                            StadiumId = 2
                        },
                        new
                        {
                            Id = 3,
                            Coach = "Thomas Tuchel",
                            Founded = 1900,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/tMir8iCr-xQOIafxi.png",
                            Name = "FC Bayern Munich",
                            StadiumId = 3
                        },
                        new
                        {
                            Id = 4,
                            Coach = "Sari",
                            Founded = 1899,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/htYjIjFa-fL3dmxxd.png",
                            Name = "AC Milan",
                            StadiumId = 4
                        },
                        new
                        {
                            Id = 5,
                            Coach = "Luis Enrique",
                            Founded = 1970,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/EskJufg5-06Ua3sOf.png",
                            Name = "Paris Saint-Germain",
                            StadiumId = 5
                        },
                        new
                        {
                            Id = 6,
                            Coach = "Pochetino",
                            Founded = 1905,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/GMmvDEdM-IROrZEJb.png",
                            Name = "Chelsea FC",
                            StadiumId = 6
                        },
                        new
                        {
                            Id = 7,
                            Coach = "Xavi",
                            Founded = 1899,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/8dhw5vxS-fcDVLdrL.png",
                            Name = "FC Barcelona",
                            StadiumId = 7
                        },
                        new
                        {
                            Id = 8,
                            Coach = "Edin Terzić",
                            Founded = 1909,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/Yiq1eU9r-WrjrBuU2.png",
                            Name = "Borussia Dortmund",
                            StadiumId = 8
                        },
                        new
                        {
                            Id = 9,
                            Coach = "Mikel Arteta",
                            Founded = 1886,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/pfchdCg5-vcNAdtF9.png",
                            Name = "Arsenal",
                            StadiumId = 9
                        },
                        new
                        {
                            Id = 10,
                            Coach = "Jurgen Klopp",
                            Founded = 1950,
                            LeagueId = 1,
                            LogoURL = "https://static.flashscore.com/res/image/data/vwC9RGhl-Imx2oQd8.png",
                            Name = "Liverpool",
                            StadiumId = 10
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4ea6ee34-1586-44f6-bc7f-81a6ce2acf1a",
                            ConcurrencyStamp = "4f4b0cc0-3496-492a-9c25-309234e7828c",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "dd657ba7-8f87-4385-877f-0e8150a995ec",
                            ConcurrencyStamp = "0172fd07-c17b-4f6b-95f1-747002396d70",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "5960fd2f-7d29-4b42-8f4d-b0a8979fc967",
                            RoleId = "4ea6ee34-1586-44f6-bc7f-81a6ce2acf1a"
                        },
                        new
                        {
                            UserId = "a78b1097-2433-4333-8168-048827f0eab7",
                            RoleId = "dd657ba7-8f87-4385-877f-0e8150a995ec"
                        },
                        new
                        {
                            UserId = "a78b1097-2433-4333-8168-048827f0eab7",
                            RoleId = "4ea6ee34-1586-44f6-bc7f-81a6ce2acf1a"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Favorite", b =>
                {
                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Match", "Match")
                        .WithMany("Favorites")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.ApplicationUser", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Goal", b =>
                {
                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Player", "GoalAssistant")
                        .WithMany("GoalsAssisted")
                        .HasForeignKey("GoalAssistantId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Player", "GoalScorer")
                        .WithMany("GoalsScored")
                        .HasForeignKey("GoalScorerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Team", "Team")
                        .WithMany("Goals")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GoalAssistant");

                    b.Navigation("GoalScorer");

                    b.Navigation("Match");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Match", b =>
                {
                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Team", "AwayTeam")
                        .WithMany("AwayMatches")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Team", "HomeTeam")
                        .WithMany("HomeMatches")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.League", "League")
                        .WithMany("Match")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Stadium", "Stadium")
                        .WithMany("Matches")
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");

                    b.Navigation("League");

                    b.Navigation("Stadium");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Player", b =>
                {
                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Team", b =>
                {
                    b.HasOne("Football_Insight.Infrastructure.Data.Models.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.Stadium", "Stadium")
                        .WithMany("Teams")
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");

                    b.Navigation("Stadium");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Football_Insight.Infrastructure.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Football_Insight.Infrastructure.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football_Insight.Infrastructure.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Football_Insight.Infrastructure.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("Favorites");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.League", b =>
                {
                    b.Navigation("Match");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Match", b =>
                {
                    b.Navigation("Favorites");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Player", b =>
                {
                    b.Navigation("GoalsAssisted");

                    b.Navigation("GoalsScored");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Stadium", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Football_Insight.Infrastructure.Data.Models.Team", b =>
                {
                    b.Navigation("AwayMatches");

                    b.Navigation("Goals");

                    b.Navigation("HomeMatches");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
